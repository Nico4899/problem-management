syntax = "proto3";

package problemPackage;

service problemManagement{
    rpc getProblem(Pin) returns (Problem);
    rpc getProblems(empty) returns (Problems);
    rpc getProblemsByFilter(Categories) returns (Problems);

    rpc addProblem(Problem) returns (Pin);
    rpc updateProblem(Pin, Problem) returns (Problem);
    rpc deleteProblem(Pin) returns (empty);

    rpc accept(empty) returns (empty);
    rpc decline(empty) returns (empty);
    rpc close(empty) returns (empty);
    rpc approach(empty) returns (empty);
    rpc abort(empty) returns (empty);
    rpc setState(ProblemState) returns (empty);
    rpc getAcceptedState(empty) returns (ProblemState);
    rpc getDeclinedState(empty) returns (ProblemState);
    rpc getInProgressState(empty) returns (ProblemState);
    rpc getClosedState(empty) returns (ProblemState);
    rpc getOpenState(empty) returns (ProblemState);

    rpc getDescription(empty) returns (string);
}

message empty{}

message Pin {
    oneof identifier {
    int32 pin = 1;
    }
}

message Problem{
    int32 reference = 1;
    string title = 2;
    string description = 3;
    ProblemState problemState = 4;
    Date date = 5;
    string reporter = 6;
    Pin pin = 7;

}

message Problems {
    repeated Problem problems = 1;
}

message ProblemState {
    Problem problemState = 1;
}

message Categories {
    repeated ProblemState problemStates = 1;
    string user = 2;
}

message Date {
    int32 year = 1;
    int32 month = 2;
    int32 day = 3;
}
