syntax = "proto3";

package problemPackage;

service problemManagement {
    rpc Get(IN) returns (Problem);
    rpc GetProblems(Empty) returns (Problems);
    rpc GetFilteredProblems(FilterValues) returns (Problems);

    rpc Add(Problem) returns (Empty);
    rpc Update(Problem) returns (Problem);
    rpc Delete(IN) returns (Empty);

    rpc Accept(Problem) returns (Empty);
    rpc Decline(Problem) returns (Empty);
    rpc Close(Problem) returns (Empty);
    rpc Approach(Problem) returns (Empty);
    rpc Hold(Problem) returns (Empty);
}

message Empty{}

message IN {
    string in = 1;
}

message Problem{
    IN reference = 1;
    string title = 2;
    string description = 3;
    ProblemState problemState = 4;
    Date date = 5;
    Reporter reporter = 6;
    IN pin = 7;
}

message Problems {
    repeated Problem problems = 1;
}

message ProblemState {
    oneof problemState {
        Open open = 1;
        Accepted accepted = 2;
        InProgress inProgress = 3;
        Declined declined = 4;
        Closed closed = 5;
    }
}

message FilterValues {
    oneof filterValues{
        ProblemStates problemStates = 1;
        Reporters reporters = 2;
        string title = 3;
        Date date = 4;
    }
}

message ProblemStates {
    repeated ProblemState problemStates = 1;
}

message Open{
    Problem context = 1;
}

message Accepted{
    Problem context = 1;
}

message InProgress {
    Problem context = 1;
}

message Declined {
    Problem context = 1;
}

message Closed {
    Problem context = 1;
}

message Date {
    int32 year = 1;
    int32 month = 2;
    int32 day = 3;
}

message Reporter {
    string reporter = 1;
}

message Reporters {
    repeated Reporter reporters = 1;
}
